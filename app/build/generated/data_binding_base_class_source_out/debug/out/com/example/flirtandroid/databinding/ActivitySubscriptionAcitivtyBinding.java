// Generated by view binder compiler. Do not edit!
package com.example.flirtandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flirtandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySubscriptionAcitivtyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final LinearLayout boxA;

  @NonNull
  public final LinearLayout boxB;

  @NonNull
  public final LinearLayout boxC;

  @NonNull
  public final Button subscribeBtn;

  @NonNull
  public final TextView subscriptionText;

  @NonNull
  public final TextView thomasJPe;

  @NonNull
  public final Toolbar toolbar;

  private ActivitySubscriptionAcitivtyBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backBtn, @NonNull LinearLayout boxA, @NonNull LinearLayout boxB,
      @NonNull LinearLayout boxC, @NonNull Button subscribeBtn, @NonNull TextView subscriptionText,
      @NonNull TextView thomasJPe, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.boxA = boxA;
    this.boxB = boxB;
    this.boxC = boxC;
    this.subscribeBtn = subscribeBtn;
    this.subscriptionText = subscriptionText;
    this.thomasJPe = thomasJPe;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySubscriptionAcitivtyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySubscriptionAcitivtyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_subscription_acitivty, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySubscriptionAcitivtyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.box_a;
      LinearLayout boxA = ViewBindings.findChildViewById(rootView, id);
      if (boxA == null) {
        break missingId;
      }

      id = R.id.box_b;
      LinearLayout boxB = ViewBindings.findChildViewById(rootView, id);
      if (boxB == null) {
        break missingId;
      }

      id = R.id.box_c;
      LinearLayout boxC = ViewBindings.findChildViewById(rootView, id);
      if (boxC == null) {
        break missingId;
      }

      id = R.id.subscribe_btn;
      Button subscribeBtn = ViewBindings.findChildViewById(rootView, id);
      if (subscribeBtn == null) {
        break missingId;
      }

      id = R.id.subscription_text;
      TextView subscriptionText = ViewBindings.findChildViewById(rootView, id);
      if (subscriptionText == null) {
        break missingId;
      }

      id = R.id.thomas_j_pe;
      TextView thomasJPe = ViewBindings.findChildViewById(rootView, id);
      if (thomasJPe == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySubscriptionAcitivtyBinding((ConstraintLayout) rootView, backBtn, boxA,
          boxB, boxC, subscribeBtn, subscriptionText, thomasJPe, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
