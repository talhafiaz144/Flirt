// Generated by view binder compiler. Do not edit!
package com.example.flirtandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.flirtandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FavListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView copyTxt1;

  @NonNull
  public final LinearLayout favIcon1;

  @NonNull
  public final ImageView favImg1;

  @NonNull
  public final CardView tCardView;

  @NonNull
  public final TextView thomasJPe1;

  @NonNull
  public final TextView userName;

  private FavListItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView copyTxt1,
      @NonNull LinearLayout favIcon1, @NonNull ImageView favImg1, @NonNull CardView tCardView,
      @NonNull TextView thomasJPe1, @NonNull TextView userName) {
    this.rootView = rootView;
    this.copyTxt1 = copyTxt1;
    this.favIcon1 = favIcon1;
    this.favImg1 = favImg1;
    this.tCardView = tCardView;
    this.thomasJPe1 = thomasJPe1;
    this.userName = userName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FavListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FavListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fav_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FavListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copy_txt_1;
      ImageView copyTxt1 = ViewBindings.findChildViewById(rootView, id);
      if (copyTxt1 == null) {
        break missingId;
      }

      id = R.id.fav_icon_1;
      LinearLayout favIcon1 = ViewBindings.findChildViewById(rootView, id);
      if (favIcon1 == null) {
        break missingId;
      }

      id = R.id.fav_img_1;
      ImageView favImg1 = ViewBindings.findChildViewById(rootView, id);
      if (favImg1 == null) {
        break missingId;
      }

      id = R.id.t_card_view;
      CardView tCardView = ViewBindings.findChildViewById(rootView, id);
      if (tCardView == null) {
        break missingId;
      }

      id = R.id.thomas_j_pe_1;
      TextView thomasJPe1 = ViewBindings.findChildViewById(rootView, id);
      if (thomasJPe1 == null) {
        break missingId;
      }

      id = R.id.user_name;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new FavListItemBinding((LinearLayout) rootView, copyTxt1, favIcon1, favImg1, tCardView,
          thomasJPe1, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
